name: üèóÔ∏è Module Development
description: Planifier le d√©veloppement d'un nouveau module ou l'√©volution d'un module existant
title: "[MODULE] "
labels: ["module", "development", "epic"]
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        Ce template est destin√© √† planifier le d√©veloppement de modules dans Batistack.

        **Types de modules support√©s :**
        - üèóÔ∏è Chantiers, üë• RH, üè¢ Tiers, üí∞ Commerce, üì¶ Produits, ‚öôÔ∏è Core

        **Architecture modulaire :**
        - Chaque module suit la structure Laravel/Livewire
        - Tests automatis√©s par module (CI/CD)
        - Documentation int√©gr√©e

  - type: dropdown
    id: module_type
    attributes:
      label: üéØ Type de d√©veloppement
      description: S'agit-il d'un nouveau module ou de l'√©volution d'un existant ?
      options:
        - "üÜï Nouveau module"
        - "üîÑ √âvolution module existant"
        - "üîß Refactoring module"
        - "üêõ Correction module"
        - "‚ö° Optimisation performance"
    validations:
      required: true

  - type: dropdown
    id: target_module
    attributes:
      label: üèóÔ∏è Module cible
      description: Quel module est concern√© ?
      options:
        - "üèóÔ∏è Chantiers"
        - "üë• RH (Ressources Humaines)"
        - "üè¢ Tiers (Clients/Fournisseurs)"
        - "üí∞ Commerce (Devis/Factures)"
        - "üì¶ Produits & Services"
        - "‚öôÔ∏è Core (Infrastructure)"
        - "üÜï Nouveau module √† cr√©er"
    validations:
      required: true

  - type: input
    id: module_name
    attributes:
      label: üìõ Nom du module (si nouveau)
      description: Nom du nouveau module (ex: "V√©hicules", "GPAO", "Comptabilit√©")
      placeholder: "Nom du module"

  - type: dropdown
    id: priority
    attributes:
      label: üìä Priorit√© roadmap
      description: Quelle est la priorit√© de ce d√©veloppement ?
      options:
        - "üî¥ P0 - Critique (release bloquante)"
        - "üü† P1 - Haute (prochaine release)"
        - "üü° P2 - Moyenne (release future)"
        - "üîµ P3 - Basse (backlog)"
    validations:
      required: true

  - type: textarea
    id: business_context
    attributes:
      label: üíº Contexte m√©tier
      description: Pourquoi ce module/√©volution est-il n√©cessaire ?
      placeholder: |
        Exemple : Le secteur BTP n√©cessite une gestion sp√©cialis√©e des v√©hicules et engins de chantier avec :
        - Suivi des contr√¥les techniques
        - Gestion des carnets d'entretien
        - Planification des r√©visions
        - Suivi consommation carburant
    validations:
      required: true

  - type: textarea
    id: functional_specs
    attributes:
      label: üìã Sp√©cifications fonctionnelles
      description: Quelles sont les fonctionnalit√©s attendues ?
      placeholder: |
        ## Fonctionnalit√©s principales
        - [ ] Gestion du parc v√©hicules
        - [ ] Suivi des contr√¥les techniques
        - [ ] Planification maintenance
        - [ ] Tableau de bord co√ªts

        ## Int√©grations
        - [ ] Module Chantiers (affectation v√©hicules)
        - [ ] Module RH (conducteurs autoris√©s)
        - [ ] Module Commerce (facturation kilom√©trage)
    validations:
      required: true

  - type: textarea
    id: technical_specs
    attributes:
      label: ‚öôÔ∏è Sp√©cifications techniques
      description: Architecture technique et contraintes
      placeholder: |
        ## Mod√®les Eloquent
        - Vehicule (id, immatriculation, type, marque, mod√®le...)
        - VehiculeEntretien (id, vehicule_id, type, date, cout...)
        - VehiculeAffectation (id, vehicule_id, chantier_id, employe_id...)

        ## Composants Livewire
        - VehiculeTable (liste des v√©hicules)
        - VehiculeForm (cr√©ation/√©dition)
        - VehiculeEntretienTable (historique maintenance)

        ## Migrations
        - create_vehicules_table
        - create_vehicule_entretiens_table
        - create_vehicule_affectations_table

        ## Tests
        - VehiculeTest (CRUD)
        - VehiculeEntretienTest (logique m√©tier)
        - VehiculePerformanceTest (requ√™tes N+1)
    validations:
      required: true

  - type: textarea
    id: database_schema
    attributes:
      label: üóÑÔ∏è Sch√©ma base de donn√©es
      description: Structure des tables et relations
      render: sql
      placeholder: |
        -- Table principale
        CREATE TABLE vehicules (
            id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
            immatriculation VARCHAR(20) UNIQUE NOT NULL,
            type ENUM('voiture', 'camion', 'engin') NOT NULL,
            marque VARCHAR(100) NOT NULL,
            modele VARCHAR(100) NOT NULL,
            annee YEAR NOT NULL,
            created_at TIMESTAMP NULL,
            updated_at TIMESTAMP NULL
        );

        -- Relations
        ALTER TABLE vehicule_affectations
        ADD FOREIGN KEY (vehicule_id) REFERENCES vehicules(id);

  - type: textarea
    id: ui_mockups
    attributes:
      label: üé® Maquettes UI/UX
      description: Captures d'√©cran, wireframes ou liens vers les maquettes
      placeholder: |
        Ajoutez ici :
        - Captures d'√©cran des interfaces
        - Liens Figma/Sketch
        - Wireframes papier scann√©s
        - R√©f√©rences d'autres applications

  - type: textarea
    id: testing_strategy
    attributes:
      label: üß™ Strat√©gie de tests
      description: Plan de tests pour ce module
      placeholder: |
        ## Tests unitaires
        - [ ] Mod√®les Eloquent (relations, scopes, mutators)
        - [ ] Services m√©tier (calculs, validations)
        - [ ] Helpers et utilitaires

        ## Tests d'int√©gration
        - [ ] Composants Livewire (rendu, interactions)
        - [ ] Workflows complets (cr√©ation ‚Üí modification ‚Üí suppression)
        - [ ] Int√©grations inter-modules

        ## Tests de performance
        - [ ] Requ√™tes N+1 (eager loading)
        - [ ] Temps de r√©ponse des pages
        - [ ] Charge m√©moire

        ## Tests fonctionnels
        - [ ] Parcours utilisateur complets
        - [ ] Gestion des erreurs
        - [ ] Validation des formulaires

  - type: textarea
    id: migration_plan
    attributes:
      label: üîÑ Plan de migration (si applicable)
      description: Comment migrer les donn√©es existantes ?
      placeholder: |
        Si ce module remplace ou √©tend des fonctionnalit√©s existantes :
        - Migration des donn√©es existantes
        - Compatibilit√© ascendante
        - Plan de rollback
        - Communication aux utilisateurs

  - type: input
    id: estimated_effort
    attributes:
      label: ‚è±Ô∏è Effort estim√©
      description: Estimation en jours/homme
      placeholder: "Ex: 15 jours/homme"

  - type: textarea
    id: dependencies
    attributes:
      label: üîó D√©pendances
      description: Quelles sont les d√©pendances de ce d√©veloppement ?
      placeholder: |
        ## D√©pendances techniques
        - [ ] Nouveau package Composer : xyz/package
        - [ ] Mise √† jour Laravel vers version X
        - [ ] Configuration serveur sp√©cifique

        ## D√©pendances fonctionnelles
        - [ ] Module Chantiers doit √™tre finalis√©
        - [ ] API externe √† int√©grer
        - [ ] Formation √©quipe n√©cessaire

  - type: textarea
    id: acceptance_criteria
    attributes:
      label: ‚úÖ Crit√®res d'acceptation
      description: Comment savoir que le d√©veloppement est termin√© ?
      placeholder: |
        ## Crit√®res fonctionnels
        - [ ] Toutes les user stories sont impl√©ment√©es
        - [ ] Interface utilisateur valid√©e par l'√©quipe m√©tier
        - [ ] Int√©grations avec modules existants fonctionnelles

        ## Crit√®res techniques
        - [ ] Couverture de tests > 80%
        - [ ] Aucune r√©gression d√©tect√©e
        - [ ] Performance conforme aux standards
        - [ ] Documentation technique √† jour

        ## Crit√®res qualit√©
        - [ ] Code review valid√©
        - [ ] Standards de codage respect√©s
        - [ ] S√©curit√© valid√©e (pas de vuln√©rabilit√©s)

  - type: checkboxes
    id: ci_cd_integration
    attributes:
      label: üîÑ Int√©gration CI/CD
      description: Ce module sera-t-il int√©gr√© dans les workflows automatis√©s ?
      options:
        - label: Tests automatis√©s dans le pipeline CI/CD
          required: true
        - label: D√©tection automatique des changements du module
          required: true
        - label: D√©ploiement automatique en staging
          required: false
        - label: M√©triques de performance surveill√©es
          required: false

  - type: checkboxes
    id: documentation
    attributes:
      label: üìö Documentation
      description: Quelle documentation sera produite ?
      options:
        - label: Documentation utilisateur (guide d'utilisation)
          required: true
        - label: Documentation technique (architecture, API)
          required: true
        - label: Guide de migration (si applicable)
          required: false
        - label: Tutoriels vid√©o
          required: false

  - type: checkboxes
    id: checklist
    attributes:
      label: ‚úÖ Checklist d√©veloppement
      options:
        - label: Les sp√©cifications sont compl√®tes et valid√©es
          required: true
        - label: L'architecture respecte les standards du projet
          required: true
        - label: Les impacts sur les modules existants sont identifi√©s
          required: true
        - label: La strat√©gie de tests est d√©finie
          required: true
        - label: Les crit√®res d'acceptation sont mesurables
          required: true
