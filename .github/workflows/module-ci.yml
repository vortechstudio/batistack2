name: 🏗️ Module CI/CD

on:
  pull_request:
    branches: [develop, master]
    paths:
      # Modèles de tous les modules
      - 'app/Models/**'
      # Composants Livewire de tous les modules
      - 'app/Livewire/**'
      # Migrations de tous les modules
      - 'database/migrations/**'
      # Tests de tous les modules
      - 'tests/Feature/**'
      - 'tests/Unit/**'
      # Factories et seeders
      - 'database/factories/**'
      - 'database/seeders/**'
  push:
    branches: [develop]

jobs:
  detect-changed-modules:
    name: 🔍 Détection des modules modifiés
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.build-modules.outputs.modules }}
      has-changes: ${{ steps.build-modules.outputs.has-changes }}
      detection-success: ${{ steps.build-modules.outputs.detection-success }}

    steps:
      - uses: actions/checkout@v4

      - name: Détecter les changements par module
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            chantiers:
              - 'app/Models/Chantiers/**'
              - 'app/Livewire/Chantier/**'
              - 'app/Livewire/Chantiers/**'
              - 'database/migrations/**chantier**'
              - 'tests/**/*Chantier*'
            rh:
              - 'app/Models/RH/**'
              - 'app/Livewire/Humans/**'
              - 'database/migrations/**employe**'
              - 'database/migrations/**rh**'
              - 'tests/**/*RH*'
              - 'tests/**/*Employe*'
            tiers:
              - 'app/Models/Tiers/**'
              - 'app/Livewire/Tiers/**'
              - 'database/migrations/**tiers**'
              - 'tests/**/*Tiers*'
            commerce:
              - 'app/Models/Commerce/**'
              - 'database/migrations/**devis**'
              - 'database/migrations/**facture**'
              - 'database/migrations/**commande**'
              - 'tests/**/*Commerce*'
            core:
              - 'app/Models/Core/**'
              - 'app/Livewire/Core/**'
              - 'database/migrations/**core**'
              - 'tests/**/*Core*'

      - name: Construire la liste des modules
        id: build-modules
        run: |
          echo "🔍 Construction de la liste des modules modifiés..."

          MODULES=()

          if [ "${{ steps.changes.outputs.chantiers }}" = "true" ]; then
            MODULES+=("chantiers")
            echo "✅ Module Chantiers détecté"
          fi
          if [ "${{ steps.changes.outputs.rh }}" = "true" ]; then
            MODULES+=("rh")
            echo "✅ Module RH détecté"
          fi
          if [ "${{ steps.changes.outputs.tiers }}" = "true" ]; then
            MODULES+=("tiers")
            echo "✅ Module Tiers détecté"
          fi
          if [ "${{ steps.changes.outputs.commerce }}" = "true" ]; then
            MODULES+=("commerce")
            echo "✅ Module Commerce détecté"
          fi
          if [ "${{ steps.changes.outputs.core }}" = "true" ]; then
            MODULES+=("core")
            echo "✅ Module Core détecté"
          fi

          # Construire le JSON
          if [ ${#MODULES[@]} -gt 0 ]; then
            # Utiliser jq pour créer un JSON valide et compact
            MODULES_JSON=$(printf '%s\n' "${MODULES[@]}" | jq -R . | jq -s -c .)

            # Valider le JSON avant de l'écrire
            if echo "$MODULES_JSON" | jq . > /dev/null 2>&1; then
              echo "modules=$MODULES_JSON" >> $GITHUB_OUTPUT
              echo "has-changes=true" >> $GITHUB_OUTPUT
              echo "📦 Modules détectés: ${MODULES[*]}"
              echo "📦 JSON généré: $MODULES_JSON"
            else
              echo "❌ Erreur: JSON invalide généré"
              echo "modules=[]" >> $GITHUB_OUTPUT
              echo "has-changes=false" >> $GITHUB_OUTPUT
              exit 1
            fi
          else
            echo "modules=[]" >> $GITHUB_OUTPUT
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Aucun module détecté"
          fi

          echo "detection-success=true" >> $GITHUB_OUTPUT
          echo "✅ Détection terminée avec succès"

  module-tests:
    name: 🧪 Tests Module ${{ matrix.module }}
    runs-on: ubuntu-latest
    needs: detect-changed-modules
    if: needs.detect-changed-modules.outputs.has-changes == 'true' && needs.detect-changed-modules.outputs.detection-success == 'true'
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJson(needs.detect-changed-modules.outputs.modules) }}
        php-version: [8.3, 8.4]

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, bcmath, pdo_mysql, sqlite3

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{  hashFiles('composer.lock') }}
          restore-keys: |
            composer-

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-${{  hashFiles('package-lock.json') }}
          restore-keys: |
            npm-

      - name: Setup test environment
        run: |
          cp .env.github .env
          php artisan key:generate

      - name: Run module-specific tests
        run: |
          # Tests unitaires du module
          if [ -d "tests/Unit" ]; then
            php artisan test tests/Unit --filter=${{ matrix.module }} --coverage-text || true
          fi

          # Tests fonctionnels du module
          if [ -d "tests/Feature" ]; then
            php artisan test tests/Feature --filter=${{ matrix.module }} --coverage-text || true
          fi

          # Tests génériques si pas de tests spécifiques
          php artisan test --filter=${{ matrix.module }} --coverage-text || echo "⚠️ Aucun test spécifique trouvé pour ${{ matrix.module }}"

      - name: Check module documentation
        run: |
          MODULE_DOC="docs/1.0/${{ matrix.module }}.md"
          if [ ! -f "$MODULE_DOC" ]; then
            echo "⚠️ Documentation manquante pour le module ${{ matrix.module }}"
            echo "📝 Créez le fichier: $MODULE_DOC"
            # Ne pas faire échouer le build pour la documentation manquante
          else
            echo "✅ Documentation trouvée pour ${{ matrix.module }}"
          fi

  security-scan:
    name: 🔒 Analyse de sécurité
    runs-on: ubuntu-latest
    needs: detect-changed-modules
    if: needs.detect-changed-modules.outputs.has-changes == 'true' && needs.detect-changed-modules.outputs.detection-success == 'true'

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run security audit
        run: |
          # Audit des dépendances Composer
          composer audit || echo "⚠️ Vulnérabilités détectées dans les dépendances"

          # Vérification des fichiers sensibles
          echo "🔍 Vérification des fichiers sensibles..."
          if grep -r "password\|secret\|key" app/ --include="*.php" | grep -v "// " | grep -v "/*" | head -5; then
            echo "⚠️ Mots-clés sensibles détectés - Vérifiez qu'aucun secret n'est en dur"
          fi

  performance-check:
    name: ⚡ Vérification des performances
    runs-on: ubuntu-latest
    needs: detect-changed-modules
    if: needs.detect-changed-modules.outputs.has-changes == 'true' && needs.detect-changed-modules.outputs.detection-success == 'true'

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, bcmath, pdo_mysql, sqlite3

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Setup test environment
        run: |
          cp .env.github .env
          php artisan key:generate

      - name: Check for N+1 queries
        run: |
          # Tests de performance si ils existent
          if [ -d "tests/Performance" ]; then
            php artisan test tests/Performance --coverage-text
          else
            echo "ℹ️ Aucun test de performance configuré"
          fi

          # Vérification basique des requêtes N+1 dans le code
          echo "🔍 Recherche de patterns N+1 potentiels..."
          if grep -r "foreach.*->.*->" app/Models/ app/Livewire/ --include="*.php" | head -3; then
            echo "⚠️ Patterns N+1 potentiels détectés - Vérifiez l'utilisation d'eager loading"
          fi

  code-quality:
    name: 📊 Qualité du code
    runs-on: ubuntu-latest
    needs: detect-changed-modules
    if: needs.detect-changed-modules.outputs.has-changes == 'true' && needs.detect-changed-modules.outputs.detection-success == 'true'

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run Laravel Pint
        run: |
          if command -v ./vendor/bin/pint &> /dev/null; then
            composer lint && composer test:lint
          else
            echo "⚠️ Laravel Pint non configuré"
          fi

      - name: Run PHPStan
        run: |
          if [ -f "phpstan.neon.dist" ] && command -v ./vendor/bin/phpstan &> /dev/null; then
            ./vendor/bin/phpstan analyse --memory-limit=2G
          else
            echo "⚠️ PHPStan non configuré"
          fi

  summary:
    name: 📋 Résumé des tests
    runs-on: ubuntu-latest
    needs: [detect-changed-modules, module-tests, security-scan, performance-check, code-quality]
    if: always() && needs.detect-changed-modules.outputs.has-changes == 'true'

    steps:
      - name: Test Summary
        run: |
          echo "## 📊 Résumé des tests des modules"
          echo "Modules testés: ${{ needs.detect-changed-modules.outputs.modules }}"
          echo ""
          echo "### Statuts:"
          echo "- Tests modules: ${{ needs.module-tests.result }}"
          echo "- Sécurité: ${{ needs.security-scan.result }}"
          echo "- Performance: ${{ needs.performance-check.result }}"
          echo "- Qualité: ${{ needs.code-quality.result }}"
