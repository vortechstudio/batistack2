name: üéØ Automatisation des Issues

on:
  issues:
    types: [opened, labeled, assigned]
  pull_request:
    types: [opened, ready_for_review]

# Ajout des permissions n√©cessaires
permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  auto-assign-module:
    name: üìã Attribution automatique par module
    runs-on: ubuntu-latest

    steps:
      - name: Auto-assign based on module label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            // V√©rifier que nous avons une issue (pas une PR)
            if (!context.payload.issue) {
              console.log('Pas une issue, arr√™t du workflow');
              return;
            }

            const moduleAssignments = {
              'module:chantiers': ['dev-chantiers'],
              'module:rh': ['dev-rh'],
              'module:commerce': ['dev-commerce'],
              'module:tiers': ['dev-tiers'],
              'module:infrastructure': ['dev-infra'],
              'module:produits-services': ['dev-commerce'],
              'module:gpao': ['dev-production'],
              'module:facturation': ['dev-finance'],
              'transversal:infra': ['devops'],
              'transversal:ux': ['designer']
            };

            const labels = context.payload.issue.labels.map(l => l.name.toLowerCase());
            console.log('Labels d√©tect√©s (normalis√©s):', labels);

            for (const [label, assignees] of Object.entries(moduleAssignments)) {
              if (labels.includes(label.toLowerCase())) {
                console.log(`Attribution pour le label ${label}:`, assignees);
                try {
                  await github.rest.issues.addAssignees({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.payload.issue.number,
                    assignees: assignees
                  });
                  console.log('Attribution r√©ussie');
                } catch (error) {
                  console.log('Erreur lors de l\'attribution:', error.message);
                }
                break;
              }
            }

  estimate-complexity:
    name: üéØ Estimation automatique de complexit√©
    runs-on: ubuntu-latest

    steps:
      - name: Add complexity labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            // V√©rifier que nous avons une issue (pas une PR)
            if (!context.payload.issue) {
              console.log('Pas une issue, arr√™t du workflow');
              return;
            }

            const body = (context.payload.issue.body || '').toLowerCase();
            const title = context.payload.issue.title.toLowerCase();

            let complexity = 'complexity:medium';

            // Mots-cl√©s pour haute complexit√©
            if (body.includes('migration') || body.includes('api') ||
                body.includes('integration') || title.includes('architecture') ||
                body.includes('base de donn√©es') || body.includes('s√©curit√©') ||
                title.includes('refactoring') || body.includes('performance')) {
              complexity = 'complexity:high';
            }

            // Mots-cl√©s pour faible complexit√©
            if (body.includes('documentation') || body.includes('css') ||
                title.includes('fix') || title.includes('typo') ||
                body.includes('traduction') || title.includes('style') ||
                body.includes('texte') || title.includes('libell√©')) {
              complexity = 'complexity:low';
            }

            console.log(`Complexit√© estim√©e: ${complexity}`);

            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels: [complexity]
              });
              console.log('Label de complexit√© ajout√© avec succ√®s');
            } catch (error) {
              console.log('Erreur lors de l\'ajout du label:', error.message);
            }

  auto-priority:
    name: üö® Attribution automatique de priorit√©
    runs-on: ubuntu-latest

    steps:
      - name: Add priority labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            // V√©rifier que nous avons une issue (pas une PR)
            if (!context.payload.issue) {
              console.log('Pas une issue, arr√™t du workflow');
              return;
            }

            const body = (context.payload.issue.body || '').toLowerCase();
            const title = context.payload.issue.title.toLowerCase();
            const labels = context.payload.issue.labels.map(l => l.name.toLowerCase());

            console.log('Labels d√©tect√©s (normalis√©s):', labels);

            let priority = 'priorite:moyenne';

            // Priorit√© haute pour les bugs critiques
            if (labels.includes('bug') &&
                (body.includes('critique') || body.includes('bloque') ||
                 body.includes('production') || title.includes('urgent'))) {
              priority = 'priorite:haute';
            }

            // Priorit√© haute pour les fonctionnalit√©s importantes
            if (labels.includes('enhancement') &&
                (body.includes('client') || body.includes('urgent') ||
                 title.includes('important'))) {
              priority = 'priorite:haute';
            }

            // Priorit√© basse pour la documentation et les am√©liorations mineures
            if (body.includes('documentation') || title.includes('typo') ||
                title.includes('style') || labels.includes('good first issue')) {
              priority = 'priorite:basse';
            }

            console.log(`Priorit√© estim√©e: ${priority}`);

            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels: [priority]
              });
              console.log('Label de priorit√© ajout√© avec succ√®s');
            } catch (error) {
              console.log('Erreur lors de l\'ajout du label de priorit√©:', error.message);
            }
