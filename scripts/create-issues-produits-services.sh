#!/bin/bash

# Script Bash de cr√©ation des issues pour le Module Produits/Services
# N√©cessite GitHub CLI (gh) install√© et configur√©

echo "üì¶ Cr√©ation des issues pour le Module Produits/Services"
echo "===================================================="
echo ""

# V√©rifier que gh CLI est install√©
if ! command -v gh &> /dev/null; then
    echo "‚ùå GitHub CLI (gh) n'est pas install√©. Veuillez l'installer d'abord."
    exit 1
fi

# V√©rifier l'authentification
if ! gh auth status &> /dev/null; then
    echo "‚ùå Vous n'√™tes pas authentifi√© avec GitHub CLI. Ex√©cutez 'gh auth login' d'abord."
    exit 1
fi

echo "üìù Cr√©ation des issues pour le d√©veloppement du module..."

# Fonction pour cr√©er une issue
create_issue() {
    local title="$1"
    local body="$2"
    local labels="$3"
    local milestone="$4"

    echo "üìù Cr√©ation de l'issue : $title"

    # Construire la commande
    local cmd="gh issue create --title \"$title\" --body \"$body\""

    # Ajouter les labels
    if [ -n "$labels" ]; then
        IFS=',' read -ra LABEL_ARRAY <<< "$labels"
        for label in "${LABEL_ARRAY[@]}"; do
            cmd="$cmd --label \"$label\""
        done
    fi

    # Ajouter le milestone
    if [ -n "$milestone" ]; then
        cmd="$cmd --milestone \"$milestone\""
    fi

    # Ex√©cuter la commande
    if eval $cmd &> /dev/null; then
        echo "‚úÖ Issue '$title' cr√©√©e avec succ√®s"
        return 0
    else
        echo "‚ùå Erreur lors de la cr√©ation de l'issue '$title'"
        return 1
    fi
}

# Compteurs
created=0
errors=0

# Issue 1: Mod√®le de base
create_issue \
    "[PRODUITS] Cr√©ation du mod√®le de base Produit" \
    "## Description d√©taill√©e

Cr√©er le mod√®le de base pour la gestion des produits dans le contexte BTP, incluant les mat√©riaux, fournitures, et services.

### Contexte m√©tier
- Besoin de g√©rer un catalogue de produits/services pour les devis et factures
- Distinction entre mat√©riaux (quantifiables) et services (temps/forfait)
- Gestion des prix d'achat et de vente
- Suivi des stocks pour les mat√©riaux

### Solution propos√©e
Mod√®le Produit avec les caract√©ristiques sp√©cifiques au BTP

## Crit√®res d'acceptation

- [ ] Mod√®le Produit cr√©√© avec les champs essentiels
- [ ] Migration de base de donn√©es
- [ ] Relations avec les autres entit√©s (fournisseurs, cat√©gories)
- [ ] Validation des donn√©es
- [ ] Tests unitaires
- [ ] Documentation du mod√®le

## Sp√©cifications techniques

- **Mod√®le** : \`App\\Models\\Commerce\\Produit\`
- **Migration** : \`create_produits_table\`
- **Champs principaux** :
  - R√©f√©rence, nom, description
  - Type (mat√©riau/service)
  - Unit√© de mesure
  - Prix d'achat/vente
  - TVA applicable
  - Stock minimum/actuel
  - Fournisseur principal
  - Cat√©gorie

## Estimation d'effort
üïì 2-3 jours" \
    "module:produits-services,priorite:haute,type:feature" \
    "üéØ Q3 2025 - Modules Prioritaires"

if [ $? -eq 0 ]; then ((created++)); else ((errors++)); fi
sleep 0.5

# Issue 2: Interface de gestion
create_issue \
    "[PRODUITS] Interface de gestion du catalogue produits" \
    "## Description d√©taill√©e

D√©velopper l'interface utilisateur pour la gestion compl√®te du catalogue de produits et services.

### Contexte m√©tier
- Les utilisateurs doivent pouvoir cr√©er, modifier et consulter les produits
- Interface intuitive pour la saisie rapide
- Recherche et filtrage efficaces
- Import/export pour la gestion en masse

### Solution propos√©e
Interface Livewire compl√®te avec CRUD et fonctionnalit√©s avanc√©es

## Crit√®res d'acceptation

- [ ] Page de liste des produits avec recherche/filtres
- [ ] Formulaire de cr√©ation/√©dition
- [ ] Gestion des cat√©gories
- [ ] Import CSV/Excel
- [ ] Export des donn√©es
- [ ] Interface responsive
- [ ] Tests fonctionnels

## Sp√©cifications techniques

- **Composants Livewire** :
  - \`ProduitsList\`
  - \`ProduitsForm\`
  - \`ProduitsImport\`
- **Vues** : Blade templates avec TailwindCSS
- **Validation** : Form requests
- **Export** : Laravel Excel

## Estimation d'effort
üïî 1 semaine" \
    "module:produits-services,priorite:haute,type:feature,transversal:ux" \
    "üéØ Q3 2025 - Modules Prioritaires"

if [ $? -eq 0 ]; then ((created++)); else ((errors++)); fi
sleep 0.5

# Continuer avec les autres issues...
# (Je vais cr√©er les autres issues de mani√®re similaire)

echo ""
echo "üìä R√©sum√© de la cr√©ation des issues :"
echo "‚úÖ Issues cr√©√©es : $created"
echo "‚ùå Erreurs : $errors"

if [ $created -gt 0 ]; then
    echo ""
    echo "üéâ Issues du Module Produits/Services cr√©√©es avec succ√®s !"
    echo ""
    echo "üìù Prochaines √©tapes recommand√©es :"
    echo "1. Assigner les issues aux d√©veloppeurs"
    echo "2. Prioriser l'ordre de d√©veloppement"
    echo "3. Cr√©er les branches de d√©veloppement"
    echo "4. Commencer par le mod√®le de base"
fi
